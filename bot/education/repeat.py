from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.enums import ParseMode

from bot.keyboards import create_kb, start_keyboard

from bot.database import words


class Repeat(StatesGroup):
    answer = State()


async def repeat_new(message: Message, state: FSMContext):
    if not await words.check_repeat(message.from_user.id):
        await message.answer('–ù–µ—Ç—É —Å–ª–æ–≤ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ Ô∏èÔ∏èüôÅ')
        return
    await message.answer('üìö‚ú® –ü—Ä–∏–≤–µ—Ç! –í —Ä–∞–∑–¥–µ–ª–µ "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–ª–æ–≤" —Ç—ã –º–æ–∂–µ—à—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–ª–æ–≤–∞,'
                         ' –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤—ã—É—á–∏–ª. –ï—Å–ª–∏ —Å–¥–µ–ª–∞–ª –æ—à–∏–±–∫—É, –ø–æ–≤—Ç–æ—Ä–∏ —Å–ª–æ–≤–æ –¥–≤–∞–∂–¥—ã,'
                         ' —á—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å –∑–Ω–∞–Ω–∏–µ. –ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.'
                         ' –£—á–∏ –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–π—Å—è! üß†üí™üèº')
    await testing_repeat(message, state)


async def testing_repeat(message: Message, state: FSMContext):
    word_id, answers = await words.repeat_word(message.from_user.id)
    if word_id is None:
        print('–ù–µ—Ç—É —Å–ª–æ–≤')
        await message.answer('üéâ –°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üéâ\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å–Ω–∏–∑—É ‚§µÔ∏è', reply_markup=start_keyboard)
        await state.clear()
        return
    word = await words.get_word_by_id(word_id)
    await message.answer(f'–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è —Å–ª–æ–≤–æ <b>{word.eng}</b> ?', reply_markup=create_kb(answers, 1),
                         parse_mode=ParseMode.HTML)
    await state.update_data(word_id=word_id, answers=answers)
    await state.set_state(Repeat.answer)


async def result_repeat(message: Message, state: FSMContext):
    rep = 0
    context_data = await state.get_data()
    word_id = context_data['word_id']
    answers = context_data['answers']
    word = await words.get_word_by_id(word_id)
    if message.text == '‚è™ –ó–∞–∫–æ–Ω—á–∏—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ':
        await message.answer('‚ú® –ó–∞–∫–∞–Ω—á–∏–≤–∞—é ‚ú®', reply_markup=start_keyboard)
        await message.answer('–≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å–Ω–∏–∑—É ‚§µÔ∏è')
        await state.clear()
        return
    if message.text == word.rus:
        await message.answer('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ ')
        rep -= 1
    elif message.text in answers:
        await message.answer(f'‚ùå –ù–µ–≤–µ—Ä–Ω–æ, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>{word.rus}</b> ', parse_mode=ParseMode.HTML)
        rep += 1
    else:
        await message.answer('‚ùóÔ∏è –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞')
        await state.set_state(Repeat.answer)
        return

    await words.edit_repeat(message.from_user.id, word_id, rep)
    await testing_repeat(message, state)

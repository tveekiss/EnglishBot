from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.enums import ParseMode
from bot.keyboards import start_keyboard, username_kb
from bot.database import users, Users


class Username(StatesGroup):
    name = State()


async def username_command(message: Message, state: FSMContext):
    user: Users = await users.get_user_by_id(message.from_user.id)
    await message.answer('–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è —Ç–µ–±—è –Ω–∞–∑–≤–∞–ª –ø–æ-–¥—Ä—É–≥–æ–º—É? ü§î \n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–æ–≤–æ–µ –∏–º—è! üìù'
                         '\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏–º—è —Ç–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram ü™Ñ'
                         f'\n–¢–µ–∫—É—â–µ–µ –∏–º—è: <b>{user.username}</b>',
                         reply_markup=username_kb, parse_mode=ParseMode.HTML)
    await state.set_state(Username.name)


async def name_change(message: Message, state: FSMContext):
    if message.text == '‚è™ –ù–∞–∑–∞–¥':
        user = await users.get_user_by_id(message.from_user.id)
        await message.answer(f'–•–æ—Ä–æ—à–æ, –æ—Å—Ç–∞–≤–∞–π—Å—è <b>{user.username}</b> ü§ù',
                             reply_markup=start_keyboard, parse_mode=ParseMode.HTML)
        await state.clear()
        return
    elif message.text == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ telegram ü™Ñ':
        username = message.from_user.full_name
    else:
        username = message.text
    await users.edit_username(message.from_user.id, username)
    await message.answer(f'–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ —è –±—É–¥—É –Ω–∞–∑—ã–≤–∞—Ç—å —Ç–µ–±—è <b>{username}</b>! ü™Ñ‚ú®',
                         reply_markup=start_keyboard, parse_mode=ParseMode.HTML)
    await state.clear()


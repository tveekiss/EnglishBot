from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from bot.keyboards import start_keyboard
from bot.database import users
from aiogram.types import ReplyKeyboardRemove
from aiogram.enums import ParseMode


class Register(StatesGroup):
    username = State()


async def start_register(message: Message, state: FSMContext):
    user = await users.get_user_by_id(message.from_user.id)
    if not user:
        await message.answer(
            f'–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ! üòä'
            f'\n\n–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ù–∞–∑–æ–≤–∏ –º–Ω–µ —Å–≤–æ–µ –∏–º—è, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, –∫–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è. ü§ñüëã'
            '\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏–º—è —Ç–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram ü™Ñ',
            reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ telegram ü™Ñ')]],
                                             resize_keyboard=True))
        await state.set_state(Register.username)


async def register_name(message: Message, state: FSMContext):
    if message.text == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ telegram ü™Ñ':
        username = message.from_user.full_name
    else:
        username = message.text
    await users.add_user(username=username, tg_id=message.from_user.id)
    await state.clear()
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, <b>{username}</b>! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!'
        f'\n\n –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é, –≤–≤–µ–¥–∏: /help ü§ñ'
        f'\n\n<b>P.S.</b> –¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ: /feedback üòä',
        reply_markup=start_keyboard, parse_mode=ParseMode.HTML)
